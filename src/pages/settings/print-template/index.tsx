import { useState, useEffect } from 'react';
import { execute_axios_post, execute_axios_get } from '@/utils/services/httpService';
// import Heidi from "@heidihealth/widget-types/index.d";
import { useTranslation } from 'next-i18next';
import { GetStaticPaths, GetStaticProps } from 'next';
import { getI18nStaticProps } from '@/utils/services/getI18nStaticProps';

interface Element {
  id: number;
  type: 'text' | 'image' | 'grid';
  x: number;
  y: number;
  text?: string;
  src?: string;
  rows?: number;
  columns?: number;
}

export default function InvoiceDesigner() {
  const { t } = useTranslation('common');
  const [token, setToken] = useState<string>('');

  
  useEffect(() => {
    getToken();

    const heidiOptions = {
      token: token,
      target: '#heidi',
      onInit: () => {
        // Display the UI that will trigger Heidi
        document
          .querySelectorAll('.heidi-button')
          .forEach((button) => (button.style.display = 'block'));
      },
      onReady: () => {
        Heidi.onPushData((data: any) => {
          // data.notesData will contain data generated by Heidi
          // if a template was used, it will contain the result
          // using the Template structure above
   
          console.log(data);
        });
   
        Heidi.onSessionStarted((sessionId: any) => {
          // sessionId is the ID of the current Heidi Session.
        });
      },
    };

    if (typeof window !== "undefined") { // Ensure it runs only in the browser
      const script = document.createElement("script");
      script.async = true;
      script.src = "https://registrar.widget.heidihealth.com/staging/widget/heidi.js";
      
      script.onload = () => {
        if (window.Heidi) {
          new window.Heidi(heidiOptions); // Initialize Heidi widget with options
        }
      };

      document.head.appendChild(script);

      // Cleanup: Remove script when component unmounts (optional)
      return () => {
        document.head.removeChild(script);
      };
    }
  }, []);

  const getToken = async () => {
    try {
      let passData = {"headers": {'Heidi-Api-Key': 'UtYBmtHHIalLporO5dIgSQw8oJK7JALh' }};
      const response = await execute_axios_get('https://registrar.api.heidihealth.com/api/v2/ml-scribe/open-api/jwt?email=test@mail.ie&third_party_internal_id=87363298', passData);
      setToken(response.token);      
    } catch (err) {
      // setError('Failed to load doctor data.');
    } finally {
      // hideLoading();
    }
  }; 
  const templateData = {
    content: '...',
    responses: [
      {
        questionId: '...',
        question: '...',
        answerType: '...',
        answerOptions: ['...', '...'],
      },
    ],
  };
 
  function openHeidiWithTemplate() {
    Heidi.open({ template: templateData });
  }
 
  function openHeidi() {
    Heidi.open();
  }
 
  function closeHeidi() {
    Heidi.close();
  }
 
  
 
  // (function (s, o) {
  //   const script = document?.createElement('script');
  //   script.async = true;
  //   script.src = s;
  //   document.head.append(script);
  //   script.addEventListener('load', () => new Heidi(o: any));
  // })('https://registrar.widget.heidihealth.com/staging/widget/heidi.js', heidiOptions);

  return (
    <div className='mt-5 pt-5'>
      <button className="heidi-button" style={{display: "none;"}} onClick={openHeidi}>
        Open Heidi
      </button>
      <button className="heidi-button" style={{display: "none;"}} onClick={openHeidiWithTemplate}>
        Open Heidi with Template
      </button>
      <button className="heidi-button" style={{display: "none;"}} onClick={closeHeidi}>
        Close Heidi
      </button>
      <div id="heidi-widget" style={{ width: "100%", height: "600px" }}></div>
    </div>
  );
}